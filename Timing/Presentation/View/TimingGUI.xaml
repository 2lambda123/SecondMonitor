<Window
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:dmBasicProperties ="clr-namespace:SecondMonitor.DataModel.BasicProperties;assembly=DataModel"
    xmlns:model="clr-namespace:SecondMonitor.Timing.Settings.Model"
    xmlns:view="clr-namespace:SecondMonitor.Timing.Presentation.View"
    xmlns:viewModel="clr-namespace:SecondMonitor.Timing.Presentation.ViewModel"
    xmlns:winForms="clr-namespace:SecondMonitor.WindowsControls.WinForms;assembly=WindowsControls"
    xmlns:wpf="clr-namespace:SecondMonitor.WindowsControls.WPF;assembly=WindowsControls"
    xmlns:viewModel1="clr-namespace:SecondMonitor.Timing.SessionTiming.Drivers.Presentation.ViewModel"

    x:Name="MainWindow" x:Class="SecondMonitor.Timing.Presentation.View.TimingGui"

        mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" Title="{Binding Title}" Width="1600" Height="800" WindowStyle="ThreeDBorderWindow" WindowState="Maximized"
    d:DataContext="{d:DesignInstance Type=viewModel:TimingDataViewModel}">

    <Window.Resources>
        <ObjectDataProvider x:Key="DataFromTemperatureEnum" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="dmBasicProperties:TemperatureUnits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="DataFromPressureEnum" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="dmBasicProperties:PressureUnits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="DataFromVolumeEnum" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="dmBasicProperties:VolumeUnits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="DataFromFuelEnum" MethodName="GetValues"
                            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="dmBasicProperties:FuelCalculationScope"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="DataFromDisplayModeEnum" MethodName="GetValues"
        ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:DisplayModeEnum"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid x:Name="MainGrid" Background="Black" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <WindowsFormsHost
            Margin="10,0,0,288" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="196" Height="96">
            <winForms:WheelStatusControl x:Name="WhLeftFront"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="211,0,0,288" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="196" Height="96">
            <winForms:WheelStatusControl x:Name="WhRightFront" WheelPosition="FrontRight"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="10,0,0,187"  VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="196" Height="96">
            <winForms:WheelStatusControl x:Name="WhLeftRear" WheelPosition="RearLeft"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="211,0,0,187"  HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="196" Height="96">
            <winForms:WheelStatusControl x:Name="WhRightRear" WheelPosition="RearRight"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="10,0,0,70" MinHeight="100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="70" Height="112">
            <winForms:PedalControl x:Name="PedalControl"/>
        </WindowsFormsHost>

        <DataGrid x:Name="DtTimig" Margin="10,142,10,389" FontSize="18" Foreground="White" Background="Black" ItemsSource="{Binding TimingInfo}" HorizontalAlignment="Stretch"
                  d:DataContext="{d:DesignInstance Type=viewModel1:DriverTimingModelView}"
                 AutoGenerateColumns="False" HeadersVisibility="Column" CanUserSortColumns="False" CanUserReorderColumns="False" IsReadOnly="True" SelectionMode="Single" SelectionUnit="FullRow"
                  EnableColumnVirtualization ="False" EnableRowVirtualization="False"
                  >
            <DataGrid.InputBindings>
                <MouseBinding Gesture="RightClick" Command="{Binding DataContext.RightClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataContext.DoubleLeftClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            </DataGrid.InputBindings>
            <DataGrid.Resources >
                <view:BindingProxy x:Key="proxy" Data="{Binding Path=DataContext , RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                <view:DoubleToDataGridLengthValueConverter x:Key="lengthConverter"/>
                <BooleanToVisibilityConverter x:Key="BoolToVis" />
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Blue" />
                    <Setter Property="BorderBrush"  Value="White" />
                    <Setter Property="BorderThickness" Value="1"></Setter>
                    <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                </Style>
                <Style x:Key="TextBoxStyle" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLastLapBestLap}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastLapBestSessionLap}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleSector1" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLastSector1PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastSector1SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleSector2" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLastSector2PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastSector2SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxStyleSector3" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLastSector3PersonalBest}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastSector3SessionBest}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                    </Style.Resources>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Position, Mode=OneWay}" Header="#"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Position.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Position.Visible, Mode=TwoWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}">
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Name.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Name.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    Header="Name" ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding CarName, Mode=OneTime}"  Header="Car"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CarName.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CarName.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding CompletedLaps, Mode=OneWay}" Header="Laps"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CompletedLaps.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CompletedLaps.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding LastLapTime, Mode=OneWay}" Header="Last Lap"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastLapTime.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastLapTime.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding Sector1, Mode=OneWay}" Header="S1"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector1.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector1.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyleSector1}"/>
                <DataGridTextColumn Binding="{Binding Sector2, Mode=OneWay}" Header="S2"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector2.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector2.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyleSector2}"/>
                <DataGridTextColumn Binding="{Binding Sector3, Mode=OneWay}" Header="S3"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector3.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector3.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyleSector3}"/>
                <DataGridTextColumn Binding="{Binding Pace, Mode=OneWay}" Header="Pace"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Pace.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Pace.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding BestLap, Mode=OneWay}" Header="Best Lap"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.BestLap.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.BestLap.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding CurrentLapProgressTime, Mode=OneWay}" Header="Current Lap"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CurrentLapProgressTime.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CurrentLapProgressTime.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding LastPitInfo, Mode=OneWay}" Header="Pits"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastPitInfo.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastPitInfo.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding TimeToPlayer, Mode=OneWay}" Header="Gap"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TimeToPlayer.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TimeToPlayer.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
                <DataGridTextColumn Binding="{Binding TopSpeed, Mode=OneWay}" Header="Top Speed"
                                    Width= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TopSpeed.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                    Visibility= "{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TopSpeed.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                                    ElementStyle="{StaticResource TextBoxStyle}"/>
            </DataGrid.Columns>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ItemContainerStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Black"></Setter>
                    <Setter Property="BorderBrush" Value="Gray"></Setter>
                    <Setter Property="BorderThickness" Value="0.5"></Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Black"></Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsPlayer, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontSize" Value="21"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLapped, Mode=OneWay}" Value="True">
                            <Setter Property="Foreground" Value="LightBlue"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLapping, Mode=OneWay}" Value="True">
                            <Setter Property="Foreground" Value="Red"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding InPits, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="Olive"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ItemContainerStyle>

        </DataGrid>
        <Label x:Name="LblTrack" Content="Track Info"  HorizontalAlignment="Left" FontSize="20" VerticalAlignment="Top" Foreground="White"/>
        <Label x:Name="LblWeather" Content="Weather Info"  HorizontalAlignment="Left" FontSize="20" VerticalAlignment="Top" Foreground="White" Margin="0,37,0,0"/>
        <Button x:Name="BtnReset" Content="Reset Timing" HorizontalAlignment="Right" Margin="0,0,10,26" Width="117"  VerticalAlignment="Bottom" Height="55" Command="{Binding ResetCommand}"/>
        <Button Content="Configure" HorizontalAlignment="Right" Margin="0,0,132,26"  VerticalAlignment="Bottom" Width="102" Height="55" Command="{Binding OpenSettingsCommand }"/>
        <GroupBox Header="Session Settings" HorizontalAlignment="Right" Height="107" VerticalAlignment="Bottom" Width="240" Foreground="White" Margin="0,0,10,272">
            <Grid Margin="0" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="ChkScrollToPlayer" Content="Scroll To Player" HorizontalAlignment="Left" Margin="10,64,0,-3" VerticalAlignment="Top" Width="100" Foreground="White" IsChecked="{Binding DisplaySettings.ScrollToPlayer}"/>
                <Label Content="Order:" Foreground="White" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" Height="29" Width="74"/>
                <ComboBox Grid.Column="0" Margin="10,34,10,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource DataFromDisplayModeEnum}}" SelectedItem="{Binding CurrentSessionOptions.OrderingMode}"/>
                <Label Grid.Column="1" Content="Times:" Foreground="White" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" Height="29" Width="74"/>
                <ComboBox Grid.Column="1" Margin="10,34,10,0" VerticalAlignment="Top" ItemsSource="{Binding Source={StaticResource DataFromDisplayModeEnum}}" SelectedItem="{Binding CurrentSessionOptions.TimesDisplayMode}"/>

            </Grid>
        </GroupBox>
        <wpf:PositionCircle x:Name="TimingCircle" Margin="598,0,269,26" Background="Black" VerticalAlignment="Bottom" Width="Auto" MinHeight="300" Height="339" PositionCircleInformationProvider="{Binding SessionTiming}"/>

        <wpf:FuelMonitor x:Name="FuelMonitor" HorizontalAlignment="Left" Height="156" Margin="85,0,0,26" VerticalAlignment="Bottom" Width="322" DisplayUnits="{Binding DisplaySettings.VolumeUnits, Mode=OneWay}" FuelCalculationScope="{Binding DisplaySettings.FuelCalculationScope, Mode=TwoWay}"

                          d:DataContext="{d:DesignInstance Type=viewModel:TimingDataViewModel}"/>
        <wpf:TemperatureControl x:Name="WaterTemp" HorizontalAlignment="Left" Margin="412,0,0,246" VerticalAlignment="Bottom" Height="138" Width="138" MaximumTemperatureCelsius="130" Panel.ZIndex="1"  DisplayUnits = "{Binding DisplaySettings.TemperatureUnits, Mode=OneWay}"  d:DataContext="{d:DesignInstance Type=viewModel:TimingDataViewModel}" />
        <wpf:TemperatureControl  x:Name="OilTemp" HorizontalAlignment="Left" Margin="412,0,0,70" VerticalAlignment="Bottom" Height="138" Width="138" MaximumTemperatureCelsius="180" RedTemperatureStart="120" ScaleLinesMajorStepValue="40" Panel.ZIndex="1" DisplayUnits= "{Binding DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                 d:DataContext="{d:DesignInstance Type=viewModel:TimingDataViewModel}"
                                 />
        <Image HorizontalAlignment="Left" Height="24" Margin="550,0,0,123"  Width="24" VerticalAlignment="Bottom"
               Panel.ZIndex="5" Source="/Timing;component/Resources/oil.png"/>
        <Image HorizontalAlignment="Left" Height="24" Margin="550,0,0,307"  Width="24" VerticalAlignment="Bottom"
            Panel.ZIndex="5" Source="/Timing;component/Resources/water.png"/>
        <StatusBar x:Name="StatusBar" HorizontalAlignment="Stretch" Height="21" VerticalAlignment="Bottom" Panel.ZIndex="5">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Name="ConnectionStatus" Text="{Binding ConnectedSource, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Name="SessionTime" Text="{Binding SessionTime, UpdateSourceTrigger=PropertyChanged}"/>
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch">
                <ProgressBar Name="RaceProgrees" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="10" Minimum="0" Maximum="1000" Value="{Binding SessionCompletedPercentage, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
            </StatusBarItem>
            <Separator Grid.Column="5"></Separator>
            <StatusBarItem Grid.Column="6">
                <TextBlock Name="SystemTime" Text="{Binding SystemTime, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBarItem>
        </StatusBar>
        <view:SessionInfoView DataContext="{Binding SessionInfoViewModel}" HorizontalAlignment="Right"  Margin="0,10,10,0" VerticalAlignment="Top" Height="127"/>
        <Label Content="{Binding Path=CurrentGear}" HorizontalAlignment="Left" Foreground="Blue" VerticalContentAlignment="Top" HorizontalContentAlignment="Center" FontSize="24" Margin="10,0,0,27" VerticalAlignment="Bottom" Height="39" Width="70"/>
    </Grid>
</Window>
