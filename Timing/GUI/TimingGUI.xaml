<Window
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:WinForms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
            xmlns:WindowsFormsIntegration="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SecondMonitor.Timing.GUI"
        xmlns:controls="clr-namespace:SecondMonitor.CarStatus.Forms.Controls;assembly=WindowsControls"
        xmlns:controls1="clr-namespace:SecondMonitor.MonitorGui.CarStatus.Forms.Controls;assembly=WindowsControls"
        xmlns:wpf="clr-namespace:SecondMonitor.WindowsControls.wpf;assembly=WindowsControls" xmlns:wpf1="clr-namespace:SecondMonitor.WindowsControls.Controls.wpf;assembly=WindowsControls"
    xmlns:controls2="http://schemas.xceed.com/wpf/xaml/toolkit" x:Name="mainWindow" x:Class="SecondMonitor.Timing.GUI.TimingGUI"
        mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Title="Timing" Width="1600" Height="800" Left="1930" WindowStyle="ThreeDBorderWindow" WindowState="Maximized">
    <Grid Background="Black" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <WindowsFormsHost Margin="10,0,0,195" VerticalAlignment="Bottom" MinWidth="225" MinHeight="150" HorizontalAlignment="Left" Width="260" Height="170">
            <controls:WheelStatusControl x:Name="whLeftFront"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="280,0,0,195" MinWidth="225" MinHeight="150" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="260" Height="170">
            <controls:WheelStatusControl x:Name="whRightFront" WheelPostion="FrontRight"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="10,0,0,10" MinWidth="225" MinHeight="150" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="260" Height="170">
            <controls:WheelStatusControl x:Name="whLeftRear" WheelPostion="RearLeft"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="280,0,0,10" MinWidth="225" MinHeight="150" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="260" Height="170">
            <controls:WheelStatusControl x:Name="whRightRear" WheelPostion="RearRight"/>
        </WindowsFormsHost>
        <WindowsFormsHost Margin="545,0,0,10" MinHeight="100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="70" Height="139">
            <controls:PedalControl x:Name="pedalControl"/>
        </WindowsFormsHost>

        <!--<DataGrid x:Name="dtTimig" Margin="10,52,10,368" AutoGenerateColumns="False" CanUserSortColumns="False" CanUserReorderColumns="False" FontSize="20" Foreground="White" Background="Black" HeadersVisibility="Column" ColumnWidth="*"
                  HorizontalAlignment="Stretch" EnableRowVirtualization="True" EnableColumnVirtualization="True" ItemsSource="{Binding TimingInfo}"
                  >
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Position}" ClipboardContentBinding="{x:Null}" SortDirection="Ascending" Header="#" Width="60" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="Blue">
                            </Setter>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Name" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding CompletedLaps}" ClipboardContentBinding="{x:Null}" Header="Laps" IsReadOnly="True" Width="60"/>
                <DataGridTextColumn Binding="{Binding CurrentLapProgressTime}" ClipboardContentBinding="{x:Null}" Header="Current Lap" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding LastLapTime}" ClipboardContentBinding="{x:Null}" Header="Last Lap" IsReadOnly="True" Width="200">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLastLapBestLap}" Value="True">
                                    <Setter Property="Foreground" Value="Green"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding PaceAsString}" ClipboardContentBinding="{x:Null}" Header="Pace" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding BestLapString}" ClipboardContentBinding="{x:Null}" Header="Best Lap" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding LastPitInfo}" ClipboardContentBinding="{x:Null}" Header="Pits" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding LapPercentage, StringFormat=N2}" ClipboardContentBinding="{x:Null}" Header="Lap Progress" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding DistanceToPlayer, StringFormat=N0}" ClipboardContentBinding="{x:Null}" Header="Distance" IsReadOnly="True" Width="200"/>
                <DataGridTextColumn Binding="{Binding IsCurrentLapValid}" ClipboardContentBinding="{x:Null}" Header="Valid" IsReadOnly="True" Width="60"/>-->
        <!--<WindowsFormsHost Margin="845,0,0,10" MinWidth="150" MinHeight="150" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="335" Width="419">
            <controls1:GMeter x:Name="gMeter" GBallDiameter="4" GScale="1" HorizG="2" VertG="3" MaxG="4" GBallColor="Green"/>
        </WindowsFormsHost>-->
        <ListView x:Name="dtTimig" Margin="10,79,10,389" FontSize="20" Foreground="White" Background="Black" ItemsSource="{Binding TimingInfo}" HorizontalAlignment="Stretch" Focusable="False">
            <ListView.Resources>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Blue" />
                    <Setter Property="BorderBrush"  Value="White" />
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLastLapBestLap}" Value="True">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsLastLapBestSessionLap}" Value="True">
                            <Setter Property="Background" Value="Purple"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>

            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Position}" Header="#" Width="60"/>
                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding CarName}" Header="Car" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding CompletedLaps}" Header="Laps" Width="60"/>
                    <GridViewColumn DisplayMemberBinding="{Binding CurrentLapProgressTime}" Header="Current Lap" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding LastLapTime}" Header="Last Lap" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding PaceAsString}" Header="Pace" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding BestLapString}" Header="Best Lap" Width="180"/>
                    <GridViewColumn DisplayMemberBinding="{Binding LastPitInfo}" Header="Pits" Width="180"/>
                    <!--<GridViewColumn DisplayMemberBinding="{Binding LapPercentage, StringFormat=N2}" Header="Lap Progress (%)" Width="180"/>-->
                    <GridViewColumn DisplayMemberBinding="{Binding DistanceToPlayer, StringFormat=N0}" Header="Distance (m)" Width="180"/>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Black"/>
                    </Style.Resources>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlayer}" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding InPits}" Value="True">
                            <Setter Property="Background" Value="Blue"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <!--</DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPlayer}" Value="True">
                            <Setter Property="Background" Value="Red"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPlayer}" Value="False">
                            <Setter Property="Background" Value="Black"></Setter>
                            <Setter Property="FontWeight" Value="Normal"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding InPits}" Value="True">
                            <Setter Property="Background" Value="Blue">
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Blue" />
                    <Setter Property="BorderBrush"  Value="Red" />
                </Style>
            </DataGrid.Resources>
        </DataGrid>-->
        <Label x:Name="lblTrack" Content="Track Info"  HorizontalAlignment="Left" FontSize="20" VerticalAlignment="Top" Foreground="White"/>
        <Label x:Name="lblWeather" Content="Weather Info"  HorizontalAlignment="Left" FontSize="20" VerticalAlignment="Top" Foreground="White" Margin="0,37,0,0"/>
        <Label x:Name="lblBestLap" Content="{Binding BestLapFormatted, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="1035,0,0,0" VerticalAlignment="Top" Foreground="White" FontSize="20" MinWidth="250" MinHeight="30"/>
        <Label x:Name="lblTime" Content="Session Time"  HorizontalAlignment="Right" FontSize="20" Margin="0,3,10,0" VerticalAlignment="Top" Foreground="White" HorizontalContentAlignment="Right" />
        <Label x:Name="lblRemainig" Content="Session Remaining"  HorizontalAlignment="Right" FontSize="20" Margin="0,37,10,0" VerticalAlignment="Top" Foreground="White" HorizontalContentAlignment="Right" />
        <Button x:Name="btnReset" Content="Reset Timing" HorizontalAlignment="Right" Margin="0,0,10,10" Width="117" RenderTransformOrigin="0.474,-0.628" VerticalAlignment="Bottom" Height="55" Command="{Binding ResetCommand}"/>
        <Button x:Name="btnResetFuel" Content="Reset Fuel" HorizontalAlignment="Left" Margin="692,0,0,327" VerticalAlignment="Bottom" Width="67" Height="47" Command="{Binding ResetFuelCommand}" Panel.ZIndex="4"/>
        <GroupBox Header="Mode" HorizontalAlignment="Right" Height="205" VerticalAlignment="Bottom" Width="117" Foreground="White" Margin="0,0,10,154">
            <Grid Margin="2,0,3,2" Width="100" VerticalAlignment="Stretch">
                <RadioButton x:Name="rbtAutomatic" Content="Automatic" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Foreground="White" GroupName="groupMode" IsChecked="True" Command="{Binding TimingModeChangedCommand}" />
                <RadioButton x:Name="rbtAbsolute" Content="Absolute" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top" Foreground="White" GroupName="groupMode" Command="{Binding TimingModeChangedCommand}"/>
                <RadioButton x:Name="rbtRelative" Content="Relative" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top" Foreground="White" GroupName="groupMode" Command="{Binding TimingModeChangedCommand}"/>
                <controls2:IntegerUpDown x:Name="upDownPaceLaps" Margin="0,0,0,43" VerticalAlignment="Bottom" Minimum="1" Maximum="10" Text="" Value="4">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding Path=PaceLapsCommand}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls2:IntegerUpDown>
                <Label Content="Pace Laps:" HorizontalAlignment="Left" Margin="0,92,0,0" VerticalAlignment="Top" Foreground="White"/>
                <CheckBox x:Name="chkScrollToPlayer" Content="Scroll To Player" HorizontalAlignment="Left" Margin="0,72,0,0" VerticalAlignment="Top" Width="100" Foreground="White" IsChecked="True"
                          Command="{Binding Path=ScrollToPlayerCommand}"/>
            </Grid>
        </GroupBox>
        <wpf:PositionCircle x:Name="timingCircle" Margin="692,0,132,10" Background="Black" VerticalAlignment="Bottom" Width="Auto" MinHeight="300" Height="355"/>

        <wpf1:FuelMonitor x:Name="fuelMonitor" HorizontalAlignment="Left" Height="211" Margin="545,0,0,154" VerticalAlignment="Bottom" Width="142"/>
    </Grid>

</Window>
